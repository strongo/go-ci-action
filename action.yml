name: 'Continuous integration for Go modules'
description: 'Test pipeline for Go modules'
inputs:
  lint-timeout:  # id of input
    description: 'How long to wait for lint to complete before failing'
    required: false
    default: '3m'
  github_token:
    description: 'GitHub secret token'
    required: true
  code_coverage:
    description: set to `true` to run code coverage with Coveralls 
    required: false

runs:
  using: "composite"
  steps:

    - run: go get ./...
      shell: bash

    - run: go vet ./...
      shell: bash

    - run: go build ./...
      shell: bash

    - run: go test ./...
      shell: bash

    - name: Go lint
      uses: golangci/golangci-lint-action@v8
      with:
#        version: v2.0
        args: --timeout=${{ inputs.lint-timeout }}

        # Optional: working directory, useful for monorepos
        # working-directory: somedir

        # Optional: golangci-lint command line arguments.
        # args: --issues-exit-code=0

        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

        # Optional: if set to true then the all caching functionality will be complete disabled,
        #           takes precedence over all other caching options.
        # skip-cache: true

        # Optional: if set to true then the action don't cache or restore ~/go/pkg.
        # skip-pkg-cache: true

        # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
        # skip-build-cache: true

    - if: ${{ github.ref == 'refs/heads/main' }}
      name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ inputs.github_token }}
        default_bump: false

    - if: ${{ inputs.code_coverage }}
      name: Code coverage by Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ inputs.github_token }}
