name: Standard Go CI workflow

on:
  workflow_call:
    secrets:
      gh_token:
        required: true
      FIREBASE_PROJECT_ID:
        required: false
      COVERALLS_REPO_TOKEN:
        required: false
    inputs:
      disable-version-bumping: # id of input
        type: boolean
        description: 'Disables version bumping - use for apps that are not versioned'
        required: false
      install-firebase-tools: # id of input
        type: boolean
        description: 'Installs Firebase tools'
        required: false
        default: false
      lint-timeout: # id of input
        type: string
        description: 'How long to wait for lint to complete before failing'
        required: false
        default: '3m'
      GOOGLE_APPLICATION_CREDENTIALS:
        type: string
        description: 'Path to Google Application Credentials file'
        required: false

jobs:

  go_ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - run: go get ./...
        shell: bash

      - run: go build ./...
        shell: bash

      - run: go vet ./...
        shell: bash

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          #          version: latest
          version: v1.52.2

          args: --timeout=${{ inputs.lint-timeout }} --print-issued-lines=true

          # Optional: working directory, useful for monorepos
          # working-directory: some_dir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

      - if: ${{ inputs.install-firebase-tools }}
        name: Install Firebase tools
        run: curl -sL firebase.tools | bash

      - if: ${{ !secrets.COVERALLS_REPO_TOKEN || github.ref != 'refs/heads/main' }}
        run: go test ./...
        name: Run tests without coverage
        shell: bash
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/${{ inputs.GOOGLE_APPLICATION_CREDENTIALS }}

      - if: ${{ secrets.COVERALLS_REPO_TOKEN && github.ref == 'refs/heads/main' }}
        name: Run tests with coverage
        run: go test -v -coverprofile=profile.cov ./...
        shell: bash
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/${{ inputs.GOOGLE_APPLICATION_CREDENTIALS }}

      - if: ${{ !inputs.disable-version-bumping && github.ref == 'refs/heads/main' }}
        id: tag_version
        name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.gh_token }}
          default_bump: false

      # - if: ${{ secrets.COVERALLS_REPO_TOKEN && github.ref == 'refs/heads/main' }}
      #   name: Send test coverage to Coveralls
      #   uses: coverallsapp/github-action@v2
      #   with:
      #     github_token: ${{ secrets.gh_token }}
      #     COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      #     path-to-profile: profile.cov
      
      - if: ${{ secrets.COVERALLS_REPO_TOKEN && github.ref == 'refs/heads/main' }}
        uses: shogo82148/actions-goveralls@v1
        with:
          github_token: ${{ secrets.gh_token }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          path-to-profile: profile.cov
